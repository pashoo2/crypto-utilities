import { TCryptoUtilKeyExportFormatType, TCryptoUtilKeypairExportFormatType, TCryptoUtilKeypairImportFormatType, TCryptoUtilEncryptKeyTypes } from './crypto-utils.types';
import { TCryptoUtilKeypairPreImportFormatType } from './crypto-utils.types';
export declare const isCryptoKeyPairImported: (key: any, checkPrivateKey?: boolean) => key is TCryptoUtilKeypairExportFormatType;
export declare const generateKeyPair: () => PromiseLike<CryptoKeyPair>;
export declare const exportKey: (key: CryptoKey) => PromiseLike<TCryptoUtilKeyExportFormatType | Error>;
export declare const exportKeyAsString: (key: CryptoKey) => Promise<Error | string>;
export declare const exportPublicKey: (keyPair: CryptoKeyPair) => Promise<Object | Error>;
export declare const exportPublicKeyAsString: (keyPair: CryptoKeyPair) => Promise<string | Error>;
export declare const exportKeyPair: (keyPair: CryptoKeyPair, password?: string | undefined) => Promise<TCryptoUtilKeypairExportFormatType | Error>;
export declare const exportKeyPairAsString: (keyPair: CryptoKeyPair, password?: string | undefined) => Promise<string | Error>;
export declare const importKey: (key: object, isPublic?: boolean) => PromiseLike<CryptoKey>;
export declare const importPublicKey: (key: object) => PromiseLike<CryptoKey>;
export declare const importPrivateKey: (key: object) => PromiseLike<CryptoKey>;
export declare const importKeyPair: (keyPair: TCryptoUtilKeypairPreImportFormatType, checkPrivateKey?: boolean) => Promise<TCryptoUtilKeypairImportFormatType | Error>;
export declare const importKeyPairFromString: (keyPairString: string, password?: string | undefined) => Promise<TCryptoUtilKeypairImportFormatType | Error>;
export declare const importKeyFromString: (keyString: string, isPublic?: boolean) => PromiseLike<CryptoKey> | Error;
export declare const importPublicKeyFromString: (key: string) => PromiseLike<CryptoKey> | Error;
export declare const importPrivateKeyFromString: (key: string) => PromiseLike<CryptoKey> | Error;
export declare const checkIfStringIsKeyPair: (keyString: string) => boolean;
export declare const getKeyOfType: (key: TCryptoUtilEncryptKeyTypes, type: KeyType) => Promise<CryptoKey | Error>;
